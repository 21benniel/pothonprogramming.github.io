[
  {
    "name":"Hello World",
    "note":"A simple hello world example",
    "code":"",
    "page":"001-hello-world/hello.html",
    "vlog":"",
    "date":"2017-mm-dd",
    "tags":["JS"]
  },
  {
    "name":"Objects And Vars",
    "note":"Shows variable declaration in JavaScript",
    "path":"002-objects-and-vars/",
    "page":"objects.html",
    "date":"2017-mm-dd",
    "tags":["JS"]
  },
  {
    "name":"Inheritance",
    "note":"Shows basic class inheritance",
    "path":"003-inheritance/",
    "page":"inheritance.html",
    "date":"2017-mm-dd",
    "tags":["inheritance","JS"]
  },
  {
    "name":"Prototype Inheritance",
    "note":"Shows prototype inheritance in JS",
    "path":"004-prototype-inheritance/",
    "page":"prototype-inheritance.html",
    "date":"2017-mm-dd",
    "tags":["inheritance","JS"]
  },
  {
    "name":"Multiple-Inheritance",
    "note":"Shows one way to approach multiple inheritance. I later discovered that this approach copies all parent properties, which is different from true inheritance. True inheritance uses the same properties rather than cloning them. I have still found this to be a useful technique that achieves a similar effect.",
    "path":"005-multiple-inheritance/",
    "page":"multiple-inheritance.html",
    "date":"2017-mm-dd",
    "tags":["inheritance","JS"]
  },
  {
    "name":"Elements",
    "note":"Working with HTML elements.",
    "path":"",
    "page":"",
    "date":"2017-mm-dd",
    "tags":["HTML", "JS"]
  }
]